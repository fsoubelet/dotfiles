# ~/.zshrc
export EDITOR="vim"
export TERM="xterm-256color"
export PATH=$HOME/bin:/usr/local/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin

# Adding locations with important executables to PATH
export PATH="/opt/homebrew/bin:$PATH"                             # Add homebrew bin to the PATH (to get 'brew')
export PATH="/opt/homebrew/sbin:$PATH"                            # Add homebrew sbin to the PATH (for some recipes)
export PATH="$PATH:/usr/local/texlive/2024/bin/universal-darwin"  # Add LaTeX installation to PATH (update when updating texlive!)
export PATH="$PATH:$HOME/.cargo/bin"                              # Add cargo binaries to the PATH
export PATH="$PATH:$HOME/.local/bin"                              # Add uv tools location to the PATH

# Shell customization
source "$HOME/dotfiles/zsh/aliases.sh"     # Plenty of QoL aliases 
source "$HOME/dotfiles/zsh/functions.sh"   # user-made functions
source "$HOME/dotfiles/zsh/dockerfunc.sh"  # docker utility functions
source "$HOME/dotfiles/zsh/tmux.sh"        # tmux manipulation aliases and functions

# Getting the rustup shell setup
source "$HOME/.cargo/env"

# Load Pluging Manager and let it handle the plugins
source "$HOME"/dotfiles/zsh/oh_my_zsh_settings.sh
# source $(brew --prefix)/opt/antidote/share/antidote/antidote.zsh
# antidote load

# Let uv know to use its own managed Python versions
# then getting the completions for zsh in (fast eval)
export UV_PYTHON_PREFERENCE="only-managed"
eval "$(uv generate-shell-completion zsh)"

# Using GNUPG encryption
export GPG_TTY=$(tty)
gpgconf --launch gpg-agent

# For bat to allow mouse scrolling
export BAT_PAGER="less -RF"

# Activate ZSH Completions
autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/local/bin/bit bit

# Start Starship for prompt customization
eval "$(starship init zsh)"
